//------------------------------------------------------------------ Time complexity O(1)

IsFirstElementNull(elements)
{
    return elements[0] == null;
}

//-------------------------------------------------------------------Time complexity O(N)
-
ContainsValue(elements,value)
{
    foreach (var element in elements)
    {
        if (element == value) return true;
    }

    return false;
}

//-------------------------------------------------------------------Time complexity O(N2)

ContainsDuplicates(elements)
{
    for (var outer = 0; outer < elements.Count; outer++)
    {
        for (var inner = 0; inner < elements.Count; inner++)
        {
            // Don't compare with self
            if (outer == inner) continue;

            if (elements[outer] == elements[inner]) return true;
        }
    }

    return false;
}

//---------------------------------------------------------------------Time complexity O(2N)

Fibonacci(number)
{
    if (number <= 1) return number;

    return Fibonacci(number - 2) + Fibonacci(number - 1);
}

